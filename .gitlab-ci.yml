stages:
  - build
  - test
  - push

.set_colors: &set_colors
  - export BLUE='\033[0;34m'
  - export YELLOW='\033[0;33m'
  - export RED='\033[0;31m'
  - export NC='\033[0m' #No Color
  - export NOW=$(date "+%Y-%m-%d_%H-%M-%S")

build:composer:
  image: registry.sindria.org/docker-images/nginx-php:1.0.3-7.3-local
  stage: .pre
  tags:
    - default
  only:
    - tags
    - branches
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - vendor/
      - .env
      - storage/
  script:
    - echo -e "${BLUE}Building...${NC}"
    - composer install --no-interaction --no-suggest --no-ansi --no-progress
    - echo #
    - echo -e "${BLUE}Installing...${NC}"
    - cp .env.production .env
  artifacts:
    paths:
      - vendor/
      - .env
      - storage/
    expire_in: 7 days

test:php73:
  image: mattiabasone/php:7.3-cli
  stage: test
  services:
    - name: mariadb:10.2
      alias: database
  variables:
    MYSQL_DATABASE: "app"
    MYSQL_ROOT_PASSWORD: "sindriadb"
  only:
    - tags
    - branches
  before_script:
    - *set_colors
    - cp .env.local .env
  script: 
    - vendor/bin/phpunit --configuration phpunit-ci.xml

build:docker:
  image: registry.sindria.org/docker-images/image-builder:latest
  stage: build
  tags:
    - docker
  only:
    - tags
  before_script:
    - *set_colors
  script:
    - echo -e "${BLUE}Building image...${NC}"
    - chmod +x build.sh
    - ./build.sh 1000 $CI_COMMIT_TAG
    - cowsay -f tux "Build Success"

push:docker:
  image: registry.sindria.org/docker-images/image-builder:latest
  stage: push
  variables:
    IMAGE_NAME: "migrations"
    IMAGE_NAMESPACE: "sindriainc"
  tags:
    - docker
  only:
    - tags
  before_script:
    - *set_colors
  script:
    - echo -e "${BLUE}Pushing image into registry...${NC}"
    - docker push $IMAGE_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $IMAGE_NAMESPACE/$IMAGE_NAME:latest
    - echo #
    - echo -e "${BLUE}Cleaning local registry...${NC}"
    - docker image rm $IMAGE_NAMESPACE/$IMAGE_NAME:$CI_COMMIT_TAG
    - docker image rm $IMAGE_NAMESPACE/$IMAGE_NAME:latest
    - echo #
    - cowsay -f dragon "Well Done! New docker image is now on your registry."
